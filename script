import json
from itertools import product

# Load the word list from a JSON file
with open('words.json', 'r') as f:
    word_dict = json.load(f)
    word_list = list(word_dict.keys())

# Create a set of prefixes from the word list
prefixes = set([''.join(word[:i]) for word in word_list for i in range(1, 5)])

def is_prefix_valid(prefix):
    return prefix in prefixes

def find_words(grid):
    found_words = []

    # Generate all possible combinations of letters in the grid
    for i in range(4, 17):  # Word lengths from 4 to 16
        for start_row, start_col in product(range(4), range(4)):
            for dx, dy in [(0, 1), (1, 0), (1, 1), (1, -1)]:
                for direction in [1, -1]:
                    temp_word = ''
                    row, col = start_row, start_col
                    for _ in range(min(i, 4)):  # Check the first 4 letters
                        temp_word += grid[row][col]
                        if not is_prefix_valid(temp_word):
                            break
                        if direction == 1:
                            row += dy
                            col += dx
                        else:
                            row -= dy
                            col -= dx
                    else:
                        if i >= 4:  # Check the remaining letters
                            for _ in range(4, i):
                                temp_word += grid[row][col]
                                if direction == 1:
                                    row += dy
                                    col += dx
                                else:
                                    row -= dy
                                    col -= dx
                                if row < 0 or row >= 4 or col < 0 or col >= 4:
                                    break
                            else:
                                if temp_word in word_dict:
                                    found_words.append(temp_word)

    return sorted(found_words)

# Example usage
grid = [
    ['T', 'E', 'A', 'M'],
    ['G', 'A', 'Y', 'O'],
    ['I', 'L', 'A', 'R'],
    ['E', 'N', 'D', 'M']
]

words = find_words(grid)
print(words)